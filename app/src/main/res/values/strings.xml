<resources>
    <string name="app_name">DesignPattern</string>
    <string name="title_activity_main2">Main2Activity</string>
    <string name="jdgc">简单工厂模式</string>
    <string name="jdgc_intr">
       \n 产品类：\n\n
       &#160;&#160; interface BMW {\n
       &#160;&#160;&#160;&#160; String product();\n
       &#160;&#160;}\n\n

       &#160;&#160; public class BMW530 implements BMW {\n
       &#160;&#160; &#160;&#160; @Override\n
       &#160;&#160; &#160;&#160; public String product() {\n
       &#160;&#160;&#160;&#160;&#160;&#160; return this.getClass().getSimpleName();\n
       &#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;}\n
       &#160;&#160;&#160;&#160;}\n\n

       &#160;&#160; public class BMW750 implements BMW {\n
       &#160;&#160; &#160;&#160; @Override\n
       &#160;&#160; &#160;&#160; public String product() {\n
       &#160;&#160;&#160;&#160;&#160;&#160; return this.getClass().getSimpleName();\n
       &#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;}\n
       &#160;&#160;&#160;&#160;}\n\n\n
        工厂类：\n\n
       &#160;&#160;   public class BMWFactory {\n
       &#160;&#160;  &#160;&#160;  public BMW product(int code) {\n
       &#160;&#160;  &#160;&#160;  &#160;&#160;  switch (code) {\n
       &#160;&#160;  &#160;&#160;  &#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160;  case 530:\n
       &#160;&#160;  &#160;&#160;  &#160;&#160;&#160;&#160; &#160;&#160;  &#160;&#160;&#160;&#160; return new BMW530();\n
       &#160;&#160;  &#160;&#160;  &#160;&#160;  &#160;&#160;&#160;&#160;&#160;&#160; case 750:\n
       &#160;&#160;  &#160;&#160;  &#160;&#160;   &#160;&#160;&#160;&#160; &#160;&#160;&#160;&#160; return new BMW750();\n
       &#160;&#160;  &#160;&#160;  &#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160; default:\n
       &#160;&#160;  &#160;&#160;  &#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; return null;\n
       &#160;&#160;  &#160;&#160;  &#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;}\n
       &#160;&#160;  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }\n
       &#160;&#160; &#160;&#160;&#160;&#160;}\n\n\n
         测试类：\n\n
       &#160;&#160;   public class Demo {\n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public static void main(String[] args) {  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BMWFactory factory = new BMWFactory();  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BMW bmw750 = factory.product( 750 );  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BMW bmw530 = factory.product( 530 );  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}  \n
       &#160;&#160; &#160;&#160;&#160;&#160;}\n
  </string>

    <string name="gcff_intr">
       \n 产品类：\n\n
       &#160;&#160; interface BMW {\n
       &#160;&#160;&#160;&#160; String product();\n
       &#160;&#160;}\n\n

       &#160;&#160; public class BMW530 implements BMW {\n
       &#160;&#160; &#160;&#160; @Override\n
       &#160;&#160; &#160;&#160; public String product() {\n
       &#160;&#160;&#160;&#160;&#160;&#160; return this.getClass().getSimpleName();\n
       &#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;}\n
       &#160;&#160;&#160;&#160;}\n\n

       &#160;&#160; public class BMW750 implements BMW {\n
       &#160;&#160; &#160;&#160; @Override\n
       &#160;&#160; &#160;&#160; public String product() {\n
       &#160;&#160;&#160;&#160;&#160;&#160; return this.getClass().getSimpleName();\n
       &#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;}\n
       &#160;&#160;&#160;&#160;}\n\n\n
        工厂类：\n\n

       &#160;&#160;public interface FactoryBMW {\n
       &#160;&#160;&#160;&#160;&#160;&#160;BMW product();\n
       &#160;&#160;&#160;&#160;}\n\n

       &#160;&#160;   public class  FactoryBMW530 implements FactoryBMW {\n
       &#160;&#160;  &#160;&#160;  @Override\n
       &#160;&#160;  &#160;&#160;  public BMW product() {\n
       &#160;&#160;  &#160;&#160;  &#160;&#160;    return new BMW530();\n
       &#160;&#160;  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }\n
       &#160;&#160; &#160;&#160;&#160;&#160;}\n\n\n

       &#160;&#160;   public class  FactoryBMW750 implements FactoryBMW {\n
       &#160;&#160;  &#160;&#160;  @Override\n
       &#160;&#160;  &#160;&#160;  public BMW product() {\n
       &#160;&#160;  &#160;&#160;  &#160;&#160;    return new BMW750();\n
       &#160;&#160;  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }\n
       &#160;&#160; &#160;&#160;&#160;&#160;}\n\n\n

         测试类：\n\n
       &#160;&#160;   public class Demo {\n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public static void main(String[] args) {  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FactoryBMW530 factory530 = new FactoryBMW530();  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BMW bmw530 = factory530.product();  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FactoryBMW750 factory750 = new FactoryBMW750();  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BMW bmw750= factory750.product();  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}  \n
       &#160;&#160; &#160;&#160;&#160;&#160;}\n

  </string>
    <string name="cxgc_intr">
       \n 产品类：\n\n
       &#160;&#160; public interface Engine {\n
       &#160;&#160;&#160;&#160; String showEngine();\n
       &#160;&#160;}\n\n

       &#160;&#160; public class Engine530 implements Engine {\n
       &#160;&#160; &#160;&#160; @Override\n
       &#160;&#160; &#160;&#160; public String showEngine() {\n
       &#160;&#160;&#160;&#160;&#160;&#160; return this.getClass().getSimpleName();\n
       &#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;}\n
       &#160;&#160;&#160;&#160;}\n\n

       &#160;&#160; public class Engine750 implements Engine {\n
       &#160;&#160; &#160;&#160; @Override\n
       &#160;&#160; &#160;&#160; public String showEngine() {\n
       &#160;&#160;&#160;&#160;&#160;&#160; return this.getClass().getSimpleName();\n
       &#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;}\n
       &#160;&#160;&#160;&#160;}\n\n

       &#160;&#160; public interface Tyre {\n
       &#160;&#160;&#160;&#160; String showTyre();\n
       &#160;&#160;}\n\n

       &#160;&#160; public class Tyre530 implements Tyre {\n
       &#160;&#160; &#160;&#160; @Override\n
       &#160;&#160; &#160;&#160; public String showTyre() {\n
       &#160;&#160;&#160;&#160;&#160;&#160; return this.getClass().getSimpleName();\n
       &#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;}\n
       &#160;&#160;&#160;&#160;}\n\n

       &#160;&#160; public class Tyre750 implements Tyre {\n
       &#160;&#160; &#160;&#160; @Override\n
       &#160;&#160; &#160;&#160; public String showTyre() {\n
       &#160;&#160;&#160;&#160;&#160;&#160; return this.getClass().getSimpleName();\n
       &#160;&#160; &#160;&#160;&#160;&#160;&#160;&#160;}\n
       &#160;&#160;&#160;&#160;}\n\n\n


        工厂类：\n\n

       &#160;&#160;public interface AbsBMWFactory {\n
       &#160;&#160;&#160;&#160;&#160;&#160; Engine createEngine();\n
       &#160;&#160;&#160;&#160;&#160;&#160;  Tyre createTyre();\n
       &#160;&#160;&#160;&#160;}\n\n

       &#160;&#160;   public class  BMW530Factory implements AbsBMWFactory {\n
       &#160;&#160;  &#160;&#160;  @Override\n
       &#160;&#160;  &#160;&#160;  public Engine createEngine() {\n
       &#160;&#160;  &#160;&#160;  &#160;&#160;    return new Engine530();\n
       &#160;&#160;  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }\n
       &#160;&#160;  &#160;&#160;  @Override\n
       &#160;&#160;  &#160;&#160;  public Tyre createTyre() {\n
       &#160;&#160;  &#160;&#160;  &#160;&#160;    return new Tyre530();\n
       &#160;&#160;  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }\n
       &#160;&#160; &#160;&#160;&#160;&#160;}\n\n\n

       &#160;&#160;   public class  BMW750Factory implements AbsBMWFactory {\n
       &#160;&#160;  &#160;&#160;  @Override\n
       &#160;&#160;  &#160;&#160;  public Engine createEngine() {\n
       &#160;&#160;  &#160;&#160;  &#160;&#160;    return new Engine750();\n
       &#160;&#160;  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }\n
       &#160;&#160;  &#160;&#160;  @Override\n
       &#160;&#160;  &#160;&#160;  public Tyre createTyre() {\n
       &#160;&#160;  &#160;&#160;  &#160;&#160;    return new Tyre750();\n
       &#160;&#160;  &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; }\n
       &#160;&#160; &#160;&#160;&#160;&#160;}\n\n\n

         测试类：\n\n
       &#160;&#160;   public class Demo {\n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public static void main(String[] args) {  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BMW530Factory factory530 = new BMW530Factory();  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Engine engine530 = factory530.createEngine();  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Tyre tyre530 = factory530.createTyre();  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BMW750Factory factory750 = new BMW750Factory();  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Engine engine750 = factory750.createEngine();  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Tyre tyre750 = factory750.createTyre();  \n
       &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}  \n
       &#160;&#160; &#160;&#160;&#160;&#160;}\n

  </string>
</resources>
